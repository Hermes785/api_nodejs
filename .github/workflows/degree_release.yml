name: CI/CD pipeline

on:
  push:
    branches:
      - release
      - main

jobs:
  deploy-to-elastic-beanstalk:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Find server.js file
        run: |
          if [ ! -f server.js ]; then
            echo "server.js file not found!"
            exit 1
          else
            echo "server.js file found"  
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'

      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Install bcrypt dependencies
        run: |
          npm install node-gyp -g
          sudo apt-get update && sudo apt-get install -y build-essential
          npm install bcrypt --build-from-source --bcrypt_hint_path=./node_modules/bcrypt

      - name: Run tests and stop server
        run: npm test  ././././Tests
       
      - name: Generate deployment package
        run: zip -r application.zip * .[^.]* -x "**node_modules**"

      - name: Get timestamp
        uses: gerred/actions/current-time@master
        id: current-time

      - name: Run string replace
        uses: frabert/replace-string-action@master
        id: format-time
        with:
          pattern: '[:\.]+'
          string: "${{ steps.current-time.outputs.time }}"
          replace-with: '-'
          flags: 'g'

      - name: Configure AWS Elastic Beanstalk environment
        uses: einaregilsson/beanstalk-deploy@v16
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: "degree-backend-release"
          environment_name: "degree-backend-release-dev"
          region: "eu-west-1"
          version_label: "version-label-${{ steps.format-time.outputs.replaced }}"
          wait_for_deployment: true
          deployment_package: application.zip

      - name: Deploy to Elastic Beanstalk
        run: eb deploy
